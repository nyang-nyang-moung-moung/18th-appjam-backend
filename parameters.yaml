swagger: '2.0'
info:
  description: This is an Api server for 18th Appjam entry ''.  You can find out more at [https://github.com/appjam18/appjam18-backend](https://github.com/appjam18/appjam18-backend).
  version: 1.0.0
  title: Appjam18
  # put the contact info for your development or API team
  contact:
    email: wisemuji@gmail.com

  # license:
  #   name: Apache 2.0
  #   url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /signup:
    post:
      tags:
      - Auth
      summary: Signing up user
      operationId: signup
      description: ""
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - in: body
        name: Users object
        description: Put new Users object
        schema:
          $ref: '#/definitions/Users'
      responses:
        200:
          description: user signed up
        400:
          description: invalid input, object invalid
        409:
          description: user already exists
  /signin:
    post:
      tags:
      - Auth
      summary: Signing in user
      operationId: signin
      description: ""
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: "id"
        in: "query"
        description: "The user id for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        200:
          description: "returns jwt token"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/jwt"
        400:
          description: invalid input, object invalid
  
  /setPicture:
    post:
      tags:
      - Picture
      summary: setting one picture
      operationId: setPicture
      description: ""
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: "id"
        in: "query"
        description: "The current user id"
        required: true
        type: "string"
      - name: "image"
        in: "formData"
        description: "taken image"
        required: true
        type: "file"
      responses:
        200:
          description: image uploaded
          schema:
            $ref: '#/definitions/Images'
        400:
          description: invalid input, object invalid
        409:
          description: image already exists

  /getPictures:
    get:
      tags:
      - Picture
      summary: getting all pictures(sorted by date)
      operationId: getPictures
      description: ""
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: "id"
        in: "query"
        description: "The current user id"
        required: true
        type: "string"
      responses:
        200:
          description: all images uploaded(Array)
          schema:
            $ref: '#/definitions/Images'
        400:
          description: invalid input, object invalid
        409:
          description: image already exists
definitions:
  Users:
    type: object
    required:
    - id
    - name
    - password
    - age
    properties:
      id:
        type: string
        example: ksh
      name:
        type: string
        example: kim
      password:
        type: string
        example: 123
      age:
        type: string
        example: 19
  Images:
    type: object
    required:
    - id
    - url
    - roi
    - age
    - date
    properties:
      id:
        type: string
        description: id of user
        example: test
      url:
        type: string
        example: 'http://res.cloudinary.com/wisemuji/image/upload/v1555781277/appjam18/rcq2xsndghyszfoitbhb.jpg'
      roi:
        type: array
        items: 
          $ref: '#/definitions/roi'
        description: locations of the face
      age:
        type: string
        example: 19
      date:
        type: string
        example: '2019-04-20T17:25:08.394Z'
  roi:
    type: object
    required:
    - x
    - y
    - width
    - height
    properties:
      x:
        type: string
        example: 156
      y:
        type: string
        example: 15
      width:
        type: string
        example: 465
      height:
        type: string
        example: 183
  jwt:
    type: object
    properties:
      message:
        type: string
        example: success
      token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1Y2JiNTcyMjIyMjZjMDBlYjRjNjM4MjciLCJpZCI6InRlc3QyIiwiaWF0IjoxNTU1NzgxNDE1LCJleHAiOjE1NTU3ODUwMTUsInN1YiI6InVzZXJJbmZvIn0.uIpI3n3tXxzsMzTGk0qtqf8B4mFZsprXt8YaEO4uqqQ
        
        
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
# basePath: /wisemuji/Scanus/1.0.0
# schemes:
#  - http
# Added by API Auto Mocking Plugin
# schemes:
#  - http
# Added by API Auto Mocking Plugin
schemes:
 - https
 - http
# Added by API Auto Mocking Plugin
basePath: /wisemuji/Appjam18/1.0.0